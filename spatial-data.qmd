---
title: "Working with spatial data"
author: "Kim Ely"
format: html
---
## Load libraries
```{r}
library(readr)
library(sf)
library(ggplot2)
library(leaflet)
library(scales)
library(ggspatial)
library(dplyr)
```

## Download data 
```{r}
knb_url <- "https://dev.nceas.ucsb.edu/knb/d1/mn/v2/object/urn%3Auuid%3Aaceaecb2-1ce0-4d41-a839-d3607d32bb58"

download.file(url = knb_url, destfile = 'shapefile_demo_data.zip')

unzip('shapefile_demo_data.zip', exdir = 'data')

file.remove('shapefile_demo_data.zip')
```

## Read data
```{r}
# read in shapefile using read_sf()
ak_regions <- read_sf("data/ak_regions_simp.shp")
# quick plot
plot(ak_regions)
# note, something weird going on with map. To look at that... (answer: data not projected)
class(ak_regions)
head(ak_regions)
glimpse(ak_regions)
```

## Checking crs of spatial data
```{r}
st_crs(ak_regions)

```

## transforming projection to Alaska Albers (good for Alaska maps)
```{r}
ak_regions_3338 <- ak_regions %>%
    st_transform(crs = 3338)

st_crs(ak_regions_3338)
plot(ak_regions_3338)

```

## "sf' and Tidyverse (suite of packages, ggplot, dplyr, others...)
Selecting region column
```{r}
# check colnames
colnames(ak_regions_3338)
# select region, note that geometry column is sticky, and is always there
ak_regions_3338 %>% 
  select(region)
```

Filtering a region
```{r}
# check what regions are
unique(ak_regions_3338$region)
# filter (but not creating an output here)
ak_regions_3338 %>% 
  filter(region == "Southeast")

```

# Spatial joins
Calculating the total population of each Alaska region
1. Read population data
```{r}
pop <- read_csv("data/alaska_population.csv")
head(pop)
```

2. Transform pop into spatial object (crs code for WG084 is 4326). remove = F is don't remove lat, lon columns. 
```{r}
pop_4326 <- st_as_sf(pop,
                     coords = c('lng', 'lat'),
                     crs = 4326,
                     remove = F)

head(pop_4326)
class(pop_4326)
```

3. Join population data with Alaska region (first throws a projection error: crs not equal)
```{r}
pop_joined <- st_join(pop_4326, 
                      ak_regions_3338, 
                      join = st_within)
```

Transform pop data to Alaska Albers projection
```{r}
pop_3338 <- st_transform(pop_4326, 
                         crs = 3338)
# check projection
st_crs(pop_3338)

# execute join of spatial objects
pop_joined <- st_join(pop_3338, 
                      ak_regions_3338, 
                      join = st_within)
head(pop_joined)

```

Plot population on regions map

